{"version":3,"sources":["styles/SearchBarContainer.module.css","services/fetch.js","services/fetchCity.js","components/SearchBar.jsx","views/SearchBarContainer.jsx","App.jsx","services/fetchCoords.js","index.js","styles/App.module.css","styles/SearchBar.module.css"],"names":["module","exports","fetchData","path","a","fetch","r","json","undefined","recurso","main","ciudad","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","require","config","SearchBar","onSearch","React","useState","search","setSearch","handleOnSearch","className","styles","searchBar","input","placeholder","autoComplete","value","onChange","e","target","onKeyPress","key","button","onClick","SearchBarContainer","data","handleOnClose","App","setData","useEffect","navigator","geolocation","getCurrentPosition","pos","process","then","city","oldCities","alert","fetchCoords","coords","latitude","longitude","app","bkg","container","prevData","filter","fetchCity","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,mBAAqB,iD,+ICDxB,SAAeC,EAA9B,kC,4CAAe,WAAyBC,GAAzB,mBAAAC,EAAA,sEACGC,MAAMF,GADT,cACPG,EADO,gBAESA,EAAEC,OAFX,mBAIQC,KAFfC,EAFO,QAIDC,OACVC,EAAS,CACPC,IAAKC,KAAKC,MAAML,EAAQC,KAAKK,UAC7BC,IAAKH,KAAKC,MAAML,EAAQC,KAAKO,UAC7BC,IAAKT,EAAQU,QAAQ,GAAGC,KACxBC,GAAIZ,EAAQY,GACZC,KAAMb,EAAQa,KAAKC,MACnBC,KAAMf,EAAQC,KAAKc,KACnBC,KAAMhB,EAAQgB,KACdN,QAASV,EAAQU,QAAQ,GAAGT,KAC5BgB,OAAQjB,EAAQiB,OAAOC,IACvBC,QAASnB,EAAQoB,MAAMC,IACvBC,SAAUtB,EAAQoB,MAAMG,MAhBf,kBAmBNrB,GAnBM,4C,sBCCfsB,EAAQ,IAAUC,S,mDCGH,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAElC,EAA4BC,IAAMC,SAAS,IAA3C,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAiB,WAIrBL,EAASG,GACTC,EAAU,KAGZ,OACE,sBAAKE,UAAWC,IAAOC,UAAvB,UACE,uBACEF,UAAWC,IAAOE,MAClBxB,GAAG,cACHyB,YAAY,iBACZC,aAAa,MACbC,MAAOT,EACPU,SAAU,SAACC,GAAD,OAAOV,EAAUU,EAAEC,OAAOH,QACpCI,WAAY,SAACF,GACG,UAAVA,EAAEG,KAAiBZ,OAG3B,wBAAQC,UAAWC,IAAOW,OAAQC,QAASd,EAA3C,SACE,cAAC,IAAD,S,qBCbOe,MAVf,YAA+D,EAAjCC,KAAiC,EAA3BC,cAA4B,IAAbtB,EAAY,EAAZA,SACjD,OACE,mCACE,qBAAKM,UAAWC,IAAOa,mBAAvB,SACE,cAACrB,EAAD,CAAWC,SAAUA,SCDd,SAASuB,IACtB,MAAwBtB,IAAMC,SAAS,IAAvC,mBAAOmB,EAAP,KAAaG,EAAb,KAmBA,OAPAvB,IAAMwB,WAAU,WACVC,UAAUC,aACZD,UAAUC,YAAYC,oBAAmB,SAACC,ICrBjC,SAAqBnC,EAAKE,EAAK4B,GAC5C1D,EAAU,uDAAD,OACgD4B,EADhD,gBAC2DE,EAD3D,kBAHIkC,mCAGJ,kBAEPC,MAAK,SAACC,GACFA,EACFR,GAAQ,SAACS,GAAD,4BAAmBA,GAAnB,CAA8BD,OAEtCE,MAAM,2BDeJC,CAAYN,EAAIO,OAAOC,SAAUR,EAAIO,OAAOE,UAAWd,QAE1D,IAGD,sBAAKlB,UAAWC,IAAOgC,IAAvB,UACE,qBAAKjC,UAAWC,IAAOiC,MACvB,qBAAKlC,UAAWC,IAAOkC,UAAvB,SACE,cAAC,EAAD,CACEpB,KAAMA,EACNC,cAnBR,SAAuBrC,GACrBuC,GAAQ,SAACkB,GACP,OAAOA,EAASC,QAAO,SAACX,GAAD,OAAUA,EAAK/C,KAAOA,SAkBzCe,SAxBR,SAAkBzB,IHRL,SAAmBA,EAAQiD,GACxC1D,EAAU,qDAAD,OAC8CS,EAD9C,kBAHIuD,mCAGJ,kBAEPC,MAAK,SAACC,GACFA,EACFR,GAAQ,SAACS,GAAD,4BAAmBA,GAAnB,CAA8BD,OAEtCE,MAAM,2BGERU,CAAUrE,EAAQiD,WERtBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFyB,SAASC,eAAe,U,kBCT1BrF,EAAOC,QAAU,CAAC,IAAM,iBAAiB,IAAM,iBAAiB,UAAY,yB,kBCA5ED,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,6B","file":"static/js/main.c9b762dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBarContainer\":\"SearchBarContainer_SearchBarContainer__1dJzU\"};","export default async function fetchData(path) {\n  const r = await fetch(path);\n  const recurso = await r.json();\n  let ciudad;\n  if (recurso.main !== undefined) {\n    ciudad = {\n      min: Math.round(recurso.main.temp_min),\n      max: Math.round(recurso.main.temp_max),\n      img: recurso.weather[0].icon,\n      id: recurso.id,\n      wind: recurso.wind.speed,\n      temp: recurso.main.temp,\n      name: recurso.name,\n      weather: recurso.weather[0].main,\n      clouds: recurso.clouds.all,\n      latitud: recurso.coord.lat,\n      longitud: recurso.coord.lon,\n    };\n  }\n  return ciudad;\n}\n","import fetchData from \"./fetch\";\nrequire('dotenv').config()\n\nconst apiKey = process.env.REACT_APP_APIKEY;\n\nexport default function fetchCity(ciudad, setData) {\n  fetchData(\n    `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n  ).then((city) => {\n    if (city) {\n      setData((oldCities) => [...oldCities, city]);\n    } else {\n      alert(\"Ciudad no encontrada\");\n    }\n  });\n}\n","import React from \"react\";\nimport { IoChevronForwardSharp } from \"react-icons/io5\";\nimport styles from \"../styles/SearchBar.module.css\";\n\nexport default function SearchBar({ onSearch }) {\n  // acá va tu código\n  const [search, setSearch] = React.useState(\"\");\n\n  const handleOnSearch = () => {\n    // const input = document.getElementById(\"searchInput\");\n    // onSearch(input.value);\n    // input.value = \"\";\n    onSearch(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <div className={styles.searchBar}>\n      <input\n        className={styles.input}\n        id=\"searchInput\"\n        placeholder=\"Type city name\"\n        autoComplete=\"off\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") handleOnSearch();\n        }}\n      />\n      <button className={styles.button} onClick={handleOnSearch}>\n        <IoChevronForwardSharp />\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\n//import Card from \"../components/Card.jsx\";\n//import Cards from \"../components/Cards.jsx\";\nimport SearchBar from \"../components/SearchBar.jsx\";\n\nimport styles from \"../styles/SearchBarContainer.module.css\"; \n\nfunction SearchBarContainer({ data, handleOnClose, onSearch }) {\n  return (\n    <>\n      <div className={styles.SearchBarContainer}>\n        <SearchBar onSearch={onSearch} />\n      </div>\n    </>\n  );\n}\n\nexport default SearchBarContainer;\n","import React from \"react\";\n\nimport fetchCity from \"./services/fetchCity\";\nimport fetchCoords from \"./services/fetchCoords.js\";\n\nimport styles from \"./styles/App.module.css\";\nimport SearchBarContainer from \"./views/SearchBarContainer\";\n\n\n\nexport default function App() {\n  const [data, setData] = React.useState([]);\n\n  function onSearch(ciudad) {\n    fetchCity(ciudad, setData);\n  }\n\n  function handleOnClose(id) {\n    setData((prevData) => {\n      return prevData.filter((city) => city.id !== id);\n    });\n  }\n\n  React.useEffect(() => {\n    if (navigator.geolocation)\n      navigator.geolocation.getCurrentPosition((pos) => {\n        fetchCoords(pos.coords.latitude, pos.coords.longitude, setData);\n      });\n  }, []);\n\n  return (\n    <div className={styles.app}>\n      <div className={styles.bkg} />\n      <div className={styles.container}>\n        <SearchBarContainer\n          data={data}\n          handleOnClose={handleOnClose}\n          onSearch={onSearch}\n        />\n      </div>\n    </div>\n  );\n}\n\n\n","import fetchData from \"./fetch\";\n\nconst apiKey = process.env.REACT_APP_APIKEY;\n\nexport default function fetchCoords(lat, lon, setData) {\n  fetchData(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\n  ).then((city) => {\n    if (city) {\n      setData((oldCities) => [...oldCities, city]);\n    } else {\n      alert(\"Ciudad no encontrada\");\n    }\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App.jsx\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2eFy8\",\"bkg\":\"App_bkg__34xTW\",\"container\":\"App_container__1bl0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__2DoiA\",\"input\":\"SearchBar_input__H6myV\",\"button\":\"SearchBar_button__1jO4H\"};"],"sourceRoot":""}